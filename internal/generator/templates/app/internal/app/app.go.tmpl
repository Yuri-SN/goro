// Code generated by goro; DO NOT EDIT.

package app

import (
	"sync"
	"github.com/jmoiron/sqlx"
    "database/sql"
	"{{ .Module }}/internal/config"
	"go.uber.org/zap/zapcore"
)

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro generate command

type Logger interface {
	Debug(string, ...zapcore.Field)
	Info(string, ...zapcore.Field)
	Error(string, ...zapcore.Field)
	Fatal(string, ...zapcore.Field)
}

type App struct {
	cfg config.Config

	c     *Container
	cOnce *sync.Once

	//hc     health.Checker
	//hcOnce *sync.Once

	{{if .Databases}}
		//goro:app databases
		{{range .Databases -}} 
    		{{.Name}} {{.Connection}} 
		{{end -}}
	{{end}}


	logger Logger
}

func NewApp(configPath string) (*App, error) {
	cfg, err := config.NewConfig(configPath)
	if err != nil {
		return nil, err
	}

	app := &App{
		cOnce:  &sync.Once{},
		//hcOnce: &sync.Once{},
		cfg:    cfg,
	}

	//goro:init logger
	app.initLogger()

	//goro:init healthChecker
	//app.initHealthChecker()

	{{if .Databases}}
		//goro:init database
		{{range .Databases -}} 
			{{.Name}}, err := app.new{{.Type}}Connect(cfg.MainDB)
			if err != nil {
				return nil, err
			}
			app.{{.Name}} = {{.Name}}

		{{end}}
	{{end}}	

	//goro:init dependencies
	//app.c, err := app.initContainer()
	//if err != nil {
	//	return nil, err
	//}

	return app, nil
}
