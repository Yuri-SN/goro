// Code generated by goro; DO NOT EDIT.

package app

import (
	"sync"
	"{{ .Module }}/internal/config"
)

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the swagger generate command

type Logger interface {
	Debug(string, ...zapcore.Field)
	Info(string, ...zapcore.Field)
	Error(string, ...zapcore.Field)
	Fatal(string, ...zapcore.Field)
}

type App struct {
	cfg config.Config

	c     *Container
	cOnce *sync.Once

	hc     health.Checker
	hcOnce *sync.Once

	{{if .Databases}}
		//goro:app databases
		{{range .Databases -}} 
    		{{.Name}} {{if eq .Type `mysqlx`}}*sqlx.DB{{end}}{{if eq .Type `mysql`}}*sql.DB{{end}}
		{{end -}}
	{{end}}


	logger Logger
}

func NewApp(configPath string) (*App, error) {
	cfg, err := config.NewConfig(configPath)
	if err != nil {
		return nil, err
	}

	app := &App{
		cOnce:  &sync.Once{},
		hcOnce: &sync.Once{},
		cfg:    cfg,
	}

	//goro:init logger
	app.initLogger()

	//goro:init healthChecker
	app.initHealthChecker()

	//goro:init database
	if err := app.initDataBase(); err != nil {
		return nil, err
	}

	//goro:init dependencies
	if err := app.initContainer(); err != nil {
		return nil, err
	}

	return app, nil
}
